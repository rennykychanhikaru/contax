/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/agents/[agent_id]/calendar/status/route";
exports.ids = ["app/api/agents/[agent_id]/calendar/status/route"];
exports.modules = {

/***/ "(rsc)/./app/api/agents/[agent_id]/calendar/status/route.ts":
/*!************************************************************!*\
  !*** ./app/api/agents/[agent_id]/calendar/status/route.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/ssr */ \"(rsc)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var _lib_agent_calendar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/agent-calendar */ \"(rsc)/./lib/agent-calendar.ts\");\n/* harmony import */ var _lib_google__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/google */ \"(rsc)/./lib/google.ts\");\n\n\n\n\n\nasync function GET(req, { params }) {\n    const { agent_id } = await params;\n    try {\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)();\n        const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_2__.createServerClient)(\"http://127.0.0.1:54321\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0\", {\n            cookies: {\n                getAll () {\n                    return cookieStore.getAll();\n                },\n                setAll (cookiesToSet) {\n                    try {\n                        cookiesToSet.forEach(({ name, value, options })=>{\n                            cookieStore.set(name, value, options);\n                        });\n                    } catch (error) {\n                        console.error('Error setting cookies:', error);\n                    }\n                }\n            }\n        });\n        const { data: { user } } = await supabase.auth.getUser();\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        // Validate agent access\n        const agentAccess = await (0,_lib_agent_calendar__WEBPACK_IMPORTED_MODULE_3__.validateAgentAccess)(agent_id, user.id);\n        if (!agentAccess) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Agent not found or access denied'\n            }, {\n                status: 404\n            });\n        }\n        // Get agent with calendar status\n        const agent = await (0,_lib_agent_calendar__WEBPACK_IMPORTED_MODULE_3__.getAgentWithCalendarStatus)(agent_id);\n        if (!agent) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Agent not found'\n            }, {\n                status: 404\n            });\n        }\n        // If not connected, return disconnected status\n        if (!agent.google_calendar_connected) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                connected: false,\n                email: null,\n                calendarId: null,\n                calendars: [],\n                error: null\n            });\n        }\n        // Get tokens from database\n        const tokens = await (0,_lib_agent_calendar__WEBPACK_IMPORTED_MODULE_3__.getAgentCalendarTokens)(agent_id);\n        if (!tokens || !tokens.access_token) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                connected: false,\n                email: agent.google_calendar_email,\n                calendarId: agent.google_calendar_id,\n                calendars: [],\n                error: 'No valid access token'\n            });\n        }\n        // Try to list calendars to verify connection\n        try {\n            const calendars = await (0,_lib_google__WEBPACK_IMPORTED_MODULE_4__.listCalendars)(tokens.access_token);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                connected: true,\n                email: agent.google_calendar_email,\n                calendarId: agent.google_calendar_id,\n                calendars: calendars || [],\n                error: null,\n                lastSync: agent.google_calendar_last_sync,\n                connectedAt: agent.google_calendar_connected_at\n            });\n        } catch (error) {\n            console.error('Calendar connection test failed:', error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                connected: false,\n                email: agent.google_calendar_email,\n                calendarId: agent.google_calendar_id,\n                calendars: [],\n                error: error instanceof Error ? error.message : 'Connection test failed'\n            });\n        }\n    } catch (error) {\n        console.error('Error checking agent calendar status:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error instanceof Error ? error.message : 'Failed to check calendar status'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/agents/[agent_id]/calendar/status/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/agent-calendar.ts":
/*!*******************************!*\
  !*** ./lib/agent-calendar.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   disconnectAgentCalendar: () => (/* binding */ disconnectAgentCalendar),\n/* harmony export */   getAgentCalendarTokens: () => (/* binding */ getAgentCalendarTokens),\n/* harmony export */   getAgentCalendars: () => (/* binding */ getAgentCalendars),\n/* harmony export */   getAgentWithCalendarStatus: () => (/* binding */ getAgentWithCalendarStatus),\n/* harmony export */   refreshAgentToken: () => (/* binding */ refreshAgentToken),\n/* harmony export */   storeAgentCalendarTokens: () => (/* binding */ storeAgentCalendarTokens),\n/* harmony export */   storeAgentCalendars: () => (/* binding */ storeAgentCalendars),\n/* harmony export */   validateAgentAccess: () => (/* binding */ validateAgentAccess)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/ssr */ \"(rsc)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var _google__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./google */ \"(rsc)/./lib/google.ts\");\n\n\n\nasync function createClient() {\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n    return (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_1__.createServerClient)(\"http://127.0.0.1:54321\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0\", {\n        cookies: {\n            getAll () {\n                return cookieStore.getAll();\n            },\n            setAll (cookiesToSet) {\n                try {\n                    cookiesToSet.forEach(({ name, value, options })=>{\n                        cookieStore.set(name, value, options);\n                    });\n                } catch (error) {\n                    console.error('Error setting cookies:', error);\n                }\n            }\n        }\n    });\n}\n/**\n * Get calendar tokens for a specific agent\n */ async function getAgentCalendarTokens(agentId) {\n    const supabase = await createClient();\n    const { data, error } = await supabase.rpc('get_agent_google_tokens', {\n        p_agent_id: agentId\n    }).single();\n    if (error || !data) {\n        console.error('Error getting agent calendar tokens:', error);\n        return null;\n    }\n    // Check if token needs refresh\n    const tokenData = data;\n    if (tokenData.is_expired && tokenData.refresh_token) {\n        return await refreshAgentToken(agentId, tokenData);\n    }\n    return tokenData;\n}\n/**\n * Refresh expired agent calendar token\n */ async function refreshAgentToken(agentId, integration) {\n    if (!integration.refresh_token) {\n        console.error('No refresh token available for agent:', agentId);\n        return null;\n    }\n    const newTokenData = await (0,_google__WEBPACK_IMPORTED_MODULE_2__.refreshGoogleAccessToken)(integration.refresh_token, process.env.GOOGLE_CLIENT_ID, process.env.GOOGLE_CLIENT_SECRET);\n    if (!newTokenData) {\n        console.error('Failed to refresh token for agent:', agentId);\n        return null;\n    }\n    // Store updated tokens in database\n    const supabase = await createClient();\n    const { data, error } = await supabase.rpc('store_agent_google_tokens', {\n        p_agent_id: agentId,\n        p_access_token: newTokenData.access_token,\n        p_refresh_token: newTokenData.refresh_token || integration.refresh_token,\n        p_expires_in: newTokenData.expires_in,\n        p_email: integration.calendar_email,\n        p_calendar_id: integration.calendar_id\n    });\n    if (error) {\n        console.error('Error storing refreshed tokens:', error);\n        return null;\n    }\n    // Return updated tokens\n    return await getAgentCalendarTokens(agentId);\n}\n/**\n * Store new calendar tokens for an agent\n */ async function storeAgentCalendarTokens(agentId, accessToken, refreshToken, expiresIn, email, calendarId) {\n    const supabase = await createClient();\n    const { data, error } = await supabase.rpc('store_agent_google_tokens', {\n        p_agent_id: agentId,\n        p_access_token: accessToken,\n        p_refresh_token: refreshToken,\n        p_expires_in: expiresIn,\n        p_email: email || null,\n        p_calendar_id: calendarId || null\n    });\n    if (error) {\n        console.error('Error storing agent calendar tokens:', error);\n        return false;\n    }\n    return !!data;\n}\n/**\n * Disconnect calendar integration for an agent\n */ async function disconnectAgentCalendar(agentId) {\n    const supabase = await createClient();\n    const { data, error } = await supabase.rpc('disconnect_agent_google_calendar', {\n        p_agent_id: agentId\n    });\n    if (error) {\n        console.error('Error disconnecting agent calendar:', error);\n        return false;\n    }\n    return !!data;\n}\n/**\n * Validate agent access for a user\n */ async function validateAgentAccess(agentId, userId) {\n    const supabase = await createClient();\n    const { data: agent, error } = await supabase.from('agent_configurations').select(`\n      *,\n      organizations!inner (\n        id,\n        name,\n        organization_members!inner (\n          user_id,\n          role\n        )\n      )\n    `).eq('id', agentId).eq('organizations.organization_members.user_id', userId).single();\n    if (error || !agent) {\n        return null;\n    }\n    return {\n        agent,\n        organization: agent.organizations\n    };\n}\n/**\n * Get agent configuration with calendar status\n */ async function getAgentWithCalendarStatus(agentId) {\n    const supabase = await createClient();\n    const { data: agent, error } = await supabase.from('agent_configurations').select(`\n      id,\n      name,\n      google_calendar_connected,\n      google_calendar_email,\n      google_calendar_id,\n      google_calendar_connected_at,\n      google_calendar_last_sync\n    `).eq('id', agentId).single();\n    if (error || !agent) {\n        return null;\n    }\n    return agent;\n}\n/**\n * List calendars for an agent\n */ async function getAgentCalendars(agentId) {\n    const supabase = await createClient();\n    const { data: calendars, error } = await supabase.from('agent_calendars').select('*').eq('agent_id', agentId).order('is_primary', {\n        ascending: false\n    }).order('calendar_name');\n    if (error) {\n        console.error('Error getting agent calendars:', error);\n        return [];\n    }\n    return calendars || [];\n}\n/**\n * Store calendar list for an agent\n */ async function storeAgentCalendars(agentId, calendars) {\n    const supabase = await createClient();\n    // First, delete existing calendars for this agent\n    await supabase.from('agent_calendars').delete().eq('agent_id', agentId);\n    // Insert new calendars\n    const calendarRecords = calendars.map((cal)=>({\n            agent_id: agentId,\n            calendar_id: cal.id,\n            calendar_name: cal.summary,\n            calendar_email: cal.id,\n            is_primary: cal.primary || false,\n            access_role: cal.accessRole || 'owner',\n            background_color: cal.backgroundColor,\n            foreground_color: cal.foregroundColor\n        }));\n    const { error } = await supabase.from('agent_calendars').insert(calendarRecords);\n    if (error) {\n        console.error('Error storing agent calendars:', error);\n        return false;\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/agent-calendar.ts\n");

/***/ }),

/***/ "(rsc)/./lib/google.ts":
/*!***********************!*\
  !*** ./lib/google.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkCalendarAvailability: () => (/* binding */ checkCalendarAvailability),\n/* harmony export */   createCalendarEvent: () => (/* binding */ createCalendarEvent),\n/* harmony export */   getAccountTimezone: () => (/* binding */ getAccountTimezone),\n/* harmony export */   listCalendars: () => (/* binding */ listCalendars),\n/* harmony export */   refreshGoogleAccessToken: () => (/* binding */ refreshGoogleAccessToken)\n/* harmony export */ });\nasync function refreshGoogleAccessToken(refreshToken, clientId, clientSecret) {\n    const r = await fetch('https://oauth2.googleapis.com/token', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n            client_id: clientId,\n            client_secret: clientSecret,\n            refresh_token: refreshToken,\n            grant_type: 'refresh_token'\n        })\n    });\n    if (!r.ok) return null;\n    return await r.json();\n}\nasync function getAccountTimezone(accessToken) {\n    try {\n        const r = await fetch('https://www.googleapis.com/calendar/v3/users/me/settings/timezone', {\n            headers: {\n                Authorization: `Bearer ${accessToken}`\n            }\n        });\n        if (!r.ok) return null;\n        const j = await r.json();\n        // Response shape: { kind, etag, value: 'Europe/Amsterdam' }\n        return j?.value || null;\n    } catch  {\n        return null;\n    }\n}\n/**\n * List all calendars for the authenticated user\n */ async function listCalendars(accessToken) {\n    try {\n        const r = await fetch('https://www.googleapis.com/calendar/v3/users/me/calendarList', {\n            headers: {\n                Authorization: `Bearer ${accessToken}`\n            }\n        });\n        if (!r.ok) return null;\n        const j = await r.json();\n        const items = (j.items || []).map((c)=>({\n                id: c.id,\n                summary: c.summary,\n                primary: !!c.primary,\n                accessRole: c.accessRole,\n                selected: !!c.selected,\n                timeZone: c.timeZone || null,\n                backgroundColor: c.backgroundColor,\n                foregroundColor: c.foregroundColor\n            }));\n        return items;\n    } catch  {\n        return null;\n    }\n}\n/**\n * Check calendar availability for a given time range\n */ async function checkCalendarAvailability(accessToken, start, end, calendarId = 'primary', calendarIds) {\n    try {\n        // Get account timezone\n        const accountTz = await getAccountTimezone(accessToken);\n        const baseTz = accountTz || undefined;\n        // Normalize datetimes\n        const normStart = normalizeRfc3339(start, baseTz);\n        const normEnd = normalizeRfc3339(end, baseTz);\n        // Determine which calendars to check\n        let ids = calendarIds && calendarIds.length ? calendarIds : [];\n        if (!ids.length) {\n            // Fetch calendar list to get selected calendars\n            const calendars = await listCalendars(accessToken);\n            if (calendars && calendars.length > 0) {\n                ids = calendars.filter((c)=>(c.selected === true || c.primary === true) && (c.accessRole === 'owner' || c.accessRole === 'writer')).map((c)=>c.id);\n            }\n        }\n        if (!ids.length) ids = [\n            calendarId\n        ];\n        // Check free/busy\n        const r = await fetch('https://www.googleapis.com/calendar/v3/freeBusy', {\n            method: 'POST',\n            headers: {\n                Authorization: `Bearer ${accessToken}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                timeMin: normStart,\n                timeMax: normEnd,\n                timeZone: baseTz || 'UTC',\n                items: ids.map((id)=>({\n                        id\n                    }))\n            })\n        });\n        if (!r.ok) {\n            return {\n                available: true,\n                conflicts: [],\n                timeZone: baseTz\n            };\n        }\n        const freebusy = await r.json();\n        let busy = [];\n        if (freebusy?.calendars) {\n            for (const id of ids){\n                const slots = freebusy.calendars[id]?.busy || [];\n                busy = busy.concat(slots);\n            }\n        }\n        return {\n            available: busy.length === 0,\n            conflicts: busy,\n            timeZone: baseTz\n        };\n    } catch (error) {\n        console.error('Error checking calendar availability:', error);\n        return {\n            available: true,\n            conflicts: [],\n            timeZone: undefined\n        };\n    }\n}\n/**\n * Create a calendar event\n */ async function createCalendarEvent(accessToken, event, calendarId = 'primary') {\n    try {\n        const resp = await fetch(`https://www.googleapis.com/calendar/v3/calendars/${encodeURIComponent(calendarId)}/events?conferenceDataVersion=1`, {\n            method: 'POST',\n            headers: {\n                Authorization: `Bearer ${accessToken}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(event)\n        });\n        if (!resp.ok) {\n            const errorText = await resp.text();\n            console.error('Failed to create calendar event:', errorText);\n            return {\n                error: `${resp.status} ${errorText}`\n            };\n        }\n        const data = await resp.json();\n        return {\n            id: data.id,\n            htmlLink: data.htmlLink,\n            hangoutLink: data.hangoutLink,\n            start: data.start,\n            end: data.end,\n            summary: data.summary\n        };\n    } catch (error) {\n        console.error('Error creating calendar event:', error);\n        return {\n            error: error instanceof Error ? error.message : 'Failed to create event'\n        };\n    }\n}\n// Helper function to normalize RFC3339 datetime with timezone\nfunction normalizeRfc3339(input, timeZone) {\n    if (!input) return input;\n    // Always interpret the wall-clock portion in the provided timezone (if given),\n    // ignoring any incoming offset to avoid ET/UTC mismatches.\n    let s = input.trim();\n    s = s.replace(/[zZ]$/, '').replace(/[+-]\\d{2}:\\d{2}$/, '');\n    if (/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/.test(s)) s += ':00';\n    if (!timeZone) return s + 'Z';\n    const m = s.match(/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})$/);\n    if (!m) return s + 'Z';\n    const y = Number(m[1]);\n    const mo = Number(m[2]);\n    const d = Number(m[3]);\n    const h = Number(m[4]);\n    const mi = Number(m[5]);\n    const se = Number(m[6]);\n    const utcProbe = new Date(Date.UTC(y, mo - 1, d, h, mi, se));\n    const offset = tzOffsetString(timeZone, utcProbe);\n    return `${m[1]}-${m[2]}-${m[3]}T${m[4]}:${m[5]}:${m[6]}${offset}`;\n}\n// Helper function to get timezone offset string\nfunction tzOffsetString(timeZone, utcDate) {\n    const fmt = new Intl.DateTimeFormat('en-US', {\n        timeZone,\n        timeZoneName: 'short',\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n    });\n    const parts = fmt.formatToParts(utcDate);\n    const tzName = parts.find((p)=>p.type === 'timeZoneName')?.value || 'GMT+0';\n    const m = tzName.match(/GMT([+-])(\\d{1,2})/);\n    if (!m) return 'Z';\n    const sign = m[1] === '-' ? '-' : '+';\n    const hh = String(Number(m[2])).padStart(2, '0');\n    return `${sign}${hh}:00`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/google.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fagents%2F%5Bagent_id%5D%2Fcalendar%2Fstatus%2Froute&page=%2Fapi%2Fagents%2F%5Bagent_id%5D%2Fcalendar%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fagents%2F%5Bagent_id%5D%2Fcalendar%2Fstatus%2Froute.ts&appDir=%2FUsers%2Frennychan%2FPersonal%20Apps%2Fcontax%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frennychan%2FPersonal%20Apps%2Fcontax&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fagents%2F%5Bagent_id%5D%2Fcalendar%2Fstatus%2Froute&page=%2Fapi%2Fagents%2F%5Bagent_id%5D%2Fcalendar%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fagents%2F%5Bagent_id%5D%2Fcalendar%2Fstatus%2Froute.ts&appDir=%2FUsers%2Frennychan%2FPersonal%20Apps%2Fcontax%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frennychan%2FPersonal%20Apps%2Fcontax&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_rennychan_Personal_Apps_contax_app_api_agents_agent_id_calendar_status_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/agents/[agent_id]/calendar/status/route.ts */ \"(rsc)/./app/api/agents/[agent_id]/calendar/status/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/agents/[agent_id]/calendar/status/route\",\n        pathname: \"/api/agents/[agent_id]/calendar/status\",\n        filename: \"route\",\n        bundlePath: \"app/api/agents/[agent_id]/calendar/status/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/Users/rennychan/Personal Apps/contax/app/api/agents/[agent_id]/calendar/status/route.ts\",\n    nextConfigOutput,\n    userland: _Users_rennychan_Personal_Apps_contax_app_api_agents_agent_id_calendar_status_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/agents/[agent_id]/calendar/status/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fagents%2F%5Bagent_id%5D%2Fcalendar%2Fstatus%2Froute&page=%2Fapi%2Fagents%2F%5Bagent_id%5D%2Fcalendar%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fagents%2F%5Bagent_id%5D%2Fcalendar%2Fstatus%2Froute.ts&appDir=%2FUsers%2Frennychan%2FPersonal%20Apps%2Fcontax%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frennychan%2FPersonal%20Apps%2Fcontax&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fagents%2F%5Bagent_id%5D%2Fcalendar%2Fstatus%2Froute&page=%2Fapi%2Fagents%2F%5Bagent_id%5D%2Fcalendar%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fagents%2F%5Bagent_id%5D%2Fcalendar%2Fstatus%2Froute.ts&appDir=%2FUsers%2Frennychan%2FPersonal%20Apps%2Fcontax%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frennychan%2FPersonal%20Apps%2Fcontax&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();